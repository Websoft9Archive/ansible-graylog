- name: Delete graylog dir for sec_installation
  shell: rm -rf /data/wwwroot/graylog

- name: Clone graylog in Websoft9 
  git:
    repo: "{{graylog_git_url}}"
    dest: "/data/wwwroot/graylog"

- name: Create dir for graylog
  file: 
    state: directory
    path: "{{item}}"
  loop: 
    - /data/wwwroot/graylog/volumes
    - /data/db/mongodb
    
- name: Set up extranet access, Rename, Run docker-compose
  shell: |
    public_ip=`wget -O - https://download.websoft9.com/ansible/get_ip.sh | bash`
    sudo sed -i "s/127.0.0.1/$public_ip/g" .env
    docker-compose up -d
    sleep 30
  args:
    chdir: /data/wwwroot/graylog

# graylog nginx rewrite setting and restart nginx
- name: knowage nginx rewrite setting
  lineinfile:
    path: /etc/nginx/conf.d/default.conf
    regexp: '^.*proxy_pass.*$'
    line: 'rewrite ^ $scheme://$host:9001;'
    state: present
    backrefs: yes

- name: restarted nginx
  shell: systemctl restart nginx

- name: Set soft link for graylog
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
    force: yes
  with_items:
  - {src: /data/wwwroot/graylog/volumes/mongodb/,dest: /data/db/mongodb}

# check service and version
- name: Check graylog service 
  shell: echo "graylog" `docker inspect graylog |grep -i status`
  register: check_graylog_service
  notify: check_graylog_service
    
- name: Check graylog version
  shell: |
    sudo echo "graylog version:" $(docker images |grep graylog/graylog |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt  

- name: Check mongodb version
  shell: |
    sudo echo "mongodb version:" $(docker images |grep mongo |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt  

- name: Check elasticsearch version
  shell: |
    sudo echo "elasticsearch version:" $(docker images |grep elasticsearch |awk '{print $2}') |sudo tee -a /data/logs/install_version.txt  
